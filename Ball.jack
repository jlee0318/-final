class Ball
{
    field int x, y, size;

    field int dx, dy;

    constructor Ball new(int Ax, int Ay, int ballSize)
    {
        let x = Ax;
        let y = Ay;
        let size = ballSize;
        let dx = 1;
        let dy = 0;
        do draw();
        return this;
    }

    method void dispose()
    {
        do Memory.deAlloc(this);
        return;
    }

    method void draw()
    {
        do Screen.setColor(true);
        do Screen.drawRectangle(x, y, x + size - 1, y + size - 1);
        return;
    }

    method void erase() 
    {
        do Screen.setColor(false);
        do Screen.drawRectangle(x, y, x + size - 1, y + size - 1);
        return;
    }

    method int getX()
    {
        return x;
    }

    method int getY()
    {
        return y;
    }

    method int getSize()
    {
        return size;
    }

    method void move()  // topleft 0, left 1, botleft 2, topright 3, right 4, botright 5
    {
        do erase();

        let x = x + dx;
        if(x > 504)
        {let x = 504;}
        if(x < 0)
        {let x = 0;}

        let y = y + dy;
        if(y < 0)
        {let y = 0;}
        if((y + size) > 255)
        {let y = (255 - size);}

        do draw();
        return;
    }

    method void bounce(int wall, int baty)  // 1 for top wall, 2 for bottom wall, 3 for bat/left/right wall
    {
        if(wall = 1)
        {
            let dy = 1;
        }

        if(wall = 2)
        {
            let dy = -1;
        }

        if(wall = 3)
        {
            if((y + size > baty) & (y < (baty + 16)))
            {
                let dx = -dx;
                let dy = -1;
            }

            if((y > (baty + 15)) & (y < (baty + 26)))
            {
                let dx = -dx;
                let dy = 0;
            }

            if((y > (baty + 25)) & (y < (baty + 50)))
            {
                let dx = -dx;
                let dy = 1;
            }
        }
        return;
    }
}